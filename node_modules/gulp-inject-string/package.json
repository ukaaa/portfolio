{
  "_args": [
    [
      {
        "raw": "gulp-inject-string@^1.1.0",
        "scope": null,
        "escapedName": "gulp-inject-string",
        "name": "gulp-inject-string",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/home/nicholas/code/ukaaa-portfolio"
    ]
  ],
  "_from": "gulp-inject-string@>=1.1.0 <2.0.0",
  "_id": "gulp-inject-string@1.1.0",
  "_inCache": true,
  "_location": "/gulp-inject-string",
  "_nodeVersion": "0.10.40",
  "_npmUser": {
    "name": "schmicko",
    "email": "mike.hazell@gmail.com"
  },
  "_npmVersion": "3.3.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-inject-string@^1.1.0",
    "scope": null,
    "escapedName": "gulp-inject-string",
    "name": "gulp-inject-string",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-inject-string/-/gulp-inject-string-1.1.0.tgz",
  "_shasum": "f02ddedb0f7518dfbad548f7d2df05bae2ed1f64",
  "_shrinkwrap": null,
  "_spec": "gulp-inject-string@^1.1.0",
  "_where": "/home/nicholas/code/ukaaa-portfolio",
  "author": {
    "name": "Michael Hazell"
  },
  "bugs": {
    "url": "https://github.com/Schmicko/gulp-inject-string/issues"
  },
  "dependencies": {
    "event-stream": "^3.1.7",
    "gulp-util": "^3.0.0"
  },
  "description": "Inject snippets in build",
  "devDependencies": {
    "chai": "^3.4.1",
    "gulp": "^3.8.6",
    "gulp-rename": "^1.2.0",
    "istanbul": "^0.4.0",
    "mocha": "^2.3.4"
  },
  "directories": {},
  "dist": {
    "shasum": "f02ddedb0f7518dfbad548f7d2df05bae2ed1f64",
    "tarball": "https://registry.npmjs.org/gulp-inject-string/-/gulp-inject-string-1.1.0.tgz"
  },
  "gitHead": "79f76b196bfa852996fb9b15e9ec59fec17a8493",
  "homepage": "https://github.com/Schmicko/gulp-inject-string",
  "keywords": [
    "gulpplugin",
    "inject",
    "insert",
    "html",
    "snippet"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "schmicko",
      "email": "mike.hazell@gmail.com"
    }
  ],
  "name": "gulp-inject-string",
  "optionalDependencies": {},
  "readme": "# gulp-inject-string\n\n[![Build Status](https://travis-ci.org/Schmicko/gulp-inject-string.svg?branch=master)](https://travis-ci.org/Schmicko/gulp-inject-string)\n[![NPM version](https://badge.fury.io/js/gulp-inject-string.svg)](http://badge.fury.io/js/gulp-inject-string)\n\nInject snippets in build\n\n## Methods\n\n```js\nappend(str)             // Appends the string\nprepend(str)            // Prepends the string\nwrap(start, end)        // Wraps file contents in between *start* and *end*\nbefore(search, str)     // Inserts the string before the first occurence of *search*\nafter(search, str)      // Inserts the string after the first occurence of *search*\nbeforeEach(search, str) // Inserts the string before each occurence of *search*\nafterEach(search, str)  // Inserts the string after each occurence of *search*\nreplace(search, str)    // Replaces each occurence of *search* with *str*\n```\n\n## Examples\n\nSee [examples/build](https://github.com/Schmicko/gulp-inject-string/tree/master/examples/build) for output.\n\n```js\n\nvar gulp = require('gulp'),\n    rename = require('gulp-rename'),\n    inject = require('gulp-inject-string');\n\ngulp.task('inject:append', function(){\n    gulp.src('src/example.html')\n        .pipe(inject.append('\\n<!-- Created: ' + Date() + ' -->'))\n        .pipe(rename('append.html'))\n        .pipe(gulp.dest('build'));\n});\n\ngulp.task('inject:prepend', function(){\n    gulp.src('src/example.html')\n        .pipe(inject.prepend('<!-- Created: ' + Date() + ' -->\\n'))\n        .pipe(rename('prepend.html'))\n        .pipe(gulp.dest('build'));\n});\n\ngulp.task('inject:wrap', function(){\n    gulp.src('src/example.html')\n        .pipe(inject.wrap('<!-- Created: ' + Date() + ' -->\\n', '<!-- Author: Mike Hazell -->'))\n        .pipe(rename('wrap.html'))\n        .pipe(gulp.dest('build'));\n});\n\ngulp.task('inject:before', function(){\n    gulp.src('src/example.html')\n        .pipe(inject.before('<script', '<script src=\"http://code.jquery.com/jquery-2.1.1.min.js\"></script>\\n'))\n        .pipe(rename('before.html'))\n        .pipe(gulp.dest('build'));\n});\n\ngulp.task('inject:after', function(){\n    gulp.src('src/example.html')\n        .pipe(inject.after('</title>', '\\n<link rel=\"stylesheet\" href=\"test.css\">\\n'))\n        .pipe(rename('after.html'))\n        .pipe(gulp.dest('build'));\n});\n\ngulp.task('inject:beforeEach', function(){\n    gulp.src('src/example.html')\n        .pipe(inject.beforeEach('</p', ' Finis.'))\n        .pipe(rename('beforeEach.html'))\n        .pipe(gulp.dest('build'));\n});\n\ngulp.task('inject:afterEach', function(){\n    gulp.src('src/example.html')\n        .pipe(inject.afterEach('<p', ' class=\"bold\"'))\n        .pipe(rename('afterEach.html'))\n        .pipe(gulp.dest('build'));\n});\n\ngulp.task('inject:replace', function(){\n    gulp.src('src/example.html')\n        .pipe(inject.replace('test.js', 'test.min.js'))\n        .pipe(rename('replace.html'))\n        .pipe(gulp.dest('build'));\n});\n\ngulp.task('default', [\n    'inject:append',\n    'inject:prepend',\n    'inject:wrap',\n    'inject:before',\n    'inject:after',\n    'inject:beforeEach',\n    'inject:afterEach',\n    'inject:replace'\n]);\n\n\n```\n\n\n## Changes\n\n### v1.1.0 - 2015-12-17\n\n- Added `replace`. Thanks [alexweber](https://github.com/alexweber).\n- Realised that as soon as you say something is complete and will not need to\nchange... someone will think of something else it should do.\n\n\n### v1.0.0 - 2015-11-08\n\n- Added beforeEach and afterEach. Thanks [Joachim](https://github.com/jbjorge).\n\nAfter a year with no changes or issues, this might as well be a 1.0. It will probably never change again.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Schmicko/gulp-inject-string.git"
  },
  "scripts": {
    "coverage": "istanbul cover _mocha -- tests/test.js -R spec",
    "test": "mocha tests/test.js"
  },
  "version": "1.1.0"
}
